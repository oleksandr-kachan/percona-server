SET rocksdb_bulk_load_size=10;
CREATE TABLE t (i varchar(64), j varchar(64), k varchar(64), l varchar(64),
PRIMARY KEY (i, j),
KEY ik1 (i, k) COMMENT 'cfname=cf;partial_group_keyparts=1;partial_group_threshold=5',
KEY ik2 (i, k) COMMENT 'cfname=cf'
) ENGINE=ROCKSDB;
Warnings:
Warning	1831	Duplicate index 'ik2' defined on the table 'test.t'. This is deprecated and will be disallowed in a future release.
SET rocksdb_bulk_load_allow_sk=1;
SET rocksdb_bulk_load=1;
SET rocksdb_bulk_load=0;
CREATE TEMPORARY TABLE t1 AS
SELECT * FROM performance_schema.global_status
WHERE variable_name LIKE 'rocksdb_partial_index%';
CREATE TEMPORARY TABLE t2 AS
SELECT * FROM performance_schema.global_status
WHERE variable_name LIKE 'rocksdb_partial_index%';
include/assert.inc [Check that materialized groups are zero.]
include/assert.inc [Check that materialized rows are zero.]
include/assert.inc [Check that sorted groups are non-zero.]
include/assert.inc [Check that sorted rows are non-zero.]
DROP TABLE t1, t2;
ALTER TABLE t DROP INDEX ik1;
ALTER TABLE t ADD INDEX ik1 (i, k) COMMENT 'cfname=cf;partial_group_keyparts=1;partial_group_threshold=5';
Warnings:
Warning	1831	Duplicate index 'ik1' defined on the table 'test.t'. This is deprecated and will be disallowed in a future release.
CREATE TEMPORARY TABLE t1 AS
SELECT * FROM performance_schema.global_status
WHERE variable_name LIKE 'rocksdb_partial_index%';
CREATE TEMPORARY TABLE t2 AS
SELECT * FROM performance_schema.global_status
WHERE variable_name LIKE 'rocksdb_partial_index%';
include/assert.inc [Check that materialized groups are zero.]
include/assert.inc [Check that materialized rows are zero.]
include/assert.inc [Check that sorted groups are non-zero.]
include/assert.inc [Check that sorted rows are non-zero.]
DROP TABLE t1, t2;
DROP TABLE t;
CREATE TABLE t (i varchar(64), j varchar(64), k varchar(64), l varchar(64),
PRIMARY KEY (i, j),
KEY ik1 (i, k) COMMENT 'cfname=rev:cf;partial_group_keyparts=1;partial_group_threshold=5',
KEY ik2 (i, k) COMMENT 'cfname=rev:cf'
) ENGINE=ROCKSDB;
Warnings:
Warning	1831	Duplicate index 'ik2' defined on the table 'test.t'. This is deprecated and will be disallowed in a future release.
SET rocksdb_bulk_load_allow_sk=1;
SET rocksdb_bulk_load=1;
SET rocksdb_bulk_load=0;
CREATE TEMPORARY TABLE t1 AS
SELECT * FROM performance_schema.global_status
WHERE variable_name LIKE 'rocksdb_partial_index%';
CREATE TEMPORARY TABLE t2 AS
SELECT * FROM performance_schema.global_status
WHERE variable_name LIKE 'rocksdb_partial_index%';
include/assert.inc [Check that materialized groups are zero.]
include/assert.inc [Check that materialized rows are zero.]
include/assert.inc [Check that sorted groups are non-zero.]
include/assert.inc [Check that sorted rows are non-zero.]
DROP TABLE t1, t2;
ALTER TABLE t DROP INDEX ik1;
ALTER TABLE t ADD INDEX ik1 (i, k) COMMENT 'cfname=rev:cf;partial_group_keyparts=1;partial_group_threshold=5';
Warnings:
Warning	1831	Duplicate index 'ik1' defined on the table 'test.t'. This is deprecated and will be disallowed in a future release.
CREATE TEMPORARY TABLE t1 AS
SELECT * FROM performance_schema.global_status
WHERE variable_name LIKE 'rocksdb_partial_index%';
CREATE TEMPORARY TABLE t2 AS
SELECT * FROM performance_schema.global_status
WHERE variable_name LIKE 'rocksdb_partial_index%';
include/assert.inc [Check that materialized groups are zero.]
include/assert.inc [Check that materialized rows are zero.]
include/assert.inc [Check that sorted groups are non-zero.]
include/assert.inc [Check that sorted rows are non-zero.]
DROP TABLE t1, t2;
DROP TABLE t;
CREATE TABLE t (i int, j int, k int, l int,
PRIMARY KEY (i, j),
KEY ik1 (i, k) COMMENT 'cfname=cf;partial_group_keyparts=1;partial_group_threshold=5',
KEY ik2 (i, k) COMMENT 'cfname=cf'
) ENGINE=ROCKSDB;
Warnings:
Warning	1831	Duplicate index 'ik2' defined on the table 'test.t'. This is deprecated and will be disallowed in a future release.
SET rocksdb_bulk_load_allow_sk=1;
SET rocksdb_bulk_load=1;
SET rocksdb_bulk_load=0;
CREATE TEMPORARY TABLE t1 AS
SELECT * FROM performance_schema.global_status
WHERE variable_name LIKE 'rocksdb_partial_index%';
CREATE TEMPORARY TABLE t2 AS
SELECT * FROM performance_schema.global_status
WHERE variable_name LIKE 'rocksdb_partial_index%';
include/assert.inc [Check that materialized groups are zero.]
include/assert.inc [Check that materialized rows are zero.]
include/assert.inc [Check that sorted groups are non-zero.]
include/assert.inc [Check that sorted rows are non-zero.]
DROP TABLE t1, t2;
ALTER TABLE t DROP INDEX ik1;
ALTER TABLE t ADD INDEX ik1 (i, k) COMMENT 'cfname=cf;partial_group_keyparts=1;partial_group_threshold=5';
Warnings:
Warning	1831	Duplicate index 'ik1' defined on the table 'test.t'. This is deprecated and will be disallowed in a future release.
CREATE TEMPORARY TABLE t1 AS
SELECT * FROM performance_schema.global_status
WHERE variable_name LIKE 'rocksdb_partial_index%';
CREATE TEMPORARY TABLE t2 AS
SELECT * FROM performance_schema.global_status
WHERE variable_name LIKE 'rocksdb_partial_index%';
include/assert.inc [Check that materialized groups are zero.]
include/assert.inc [Check that materialized rows are zero.]
include/assert.inc [Check that sorted groups are non-zero.]
include/assert.inc [Check that sorted rows are non-zero.]
DROP TABLE t1, t2;
DROP TABLE t;
CREATE TABLE t (i int, j int, k int, l int,
PRIMARY KEY (i, j),
KEY ik1 (i, k) COMMENT 'cfname=cf;partial_group_keyparts=1;partial_group_threshold=5',
KEY ik2 (i, k) COMMENT 'cfname=cf'
) ENGINE=ROCKSDB;
Warnings:
Warning	1831	Duplicate index 'ik2' defined on the table 'test.t'. This is deprecated and will be disallowed in a future release.
SET rocksdb_bulk_load_allow_sk=1;
SET rocksdb_bulk_load=1;
SET rocksdb_bulk_load=0;
CREATE TEMPORARY TABLE t1 AS
SELECT * FROM performance_schema.global_status
WHERE variable_name LIKE 'rocksdb_partial_index%';
CREATE TEMPORARY TABLE t2 AS
SELECT * FROM performance_schema.global_status
WHERE variable_name LIKE 'rocksdb_partial_index%';
include/assert.inc [Check that materialized groups are zero.]
include/assert.inc [Check that materialized rows are zero.]
include/assert.inc [Check that sorted groups are non-zero.]
include/assert.inc [Check that sorted rows are non-zero.]
DROP TABLE t1, t2;
ALTER TABLE t DROP INDEX ik1;
ALTER TABLE t ADD INDEX ik1 (i, k) COMMENT 'cfname=cf;partial_group_keyparts=1;partial_group_threshold=5';
Warnings:
Warning	1831	Duplicate index 'ik1' defined on the table 'test.t'. This is deprecated and will be disallowed in a future release.
CREATE TEMPORARY TABLE t1 AS
SELECT * FROM performance_schema.global_status
WHERE variable_name LIKE 'rocksdb_partial_index%';
CREATE TEMPORARY TABLE t2 AS
SELECT * FROM performance_schema.global_status
WHERE variable_name LIKE 'rocksdb_partial_index%';
include/assert.inc [Check that materialized groups are zero.]
include/assert.inc [Check that materialized rows are zero.]
include/assert.inc [Check that sorted groups are non-zero.]
include/assert.inc [Check that sorted rows are non-zero.]
DROP TABLE t1, t2;
DROP TABLE t;
CREATE TABLE `link_table` (
`id1` bigint unsigned NOT NULL DEFAULT '0',
`id1_type` int unsigned NOT NULL DEFAULT '0',
`id2` bigint unsigned NOT NULL DEFAULT '0',
`id2_type` int unsigned NOT NULL DEFAULT '0',
`link_type` bigint unsigned NOT NULL DEFAULT '0',
`visibility` tinyint NOT NULL DEFAULT '0',
`data` varchar(255) COLLATE latin1_bin NOT NULL DEFAULT '',
`time` int unsigned NOT NULL DEFAULT '0',
`version` bigint unsigned NOT NULL DEFAULT '0',
PRIMARY KEY (`link_type`,`id1`,`id2`) COMMENT 'cf_link',
KEY `id1_type` (`link_type`, `id1`, `visibility`,`time`,`id2`,`version`,`data`) COMMENT 'rev:cf_link_id1_type',
KEY `type_id1` (`link_type`, `id1`, `visibility`,`time`,`id2`,`version`,`data`) COMMENT 'cfname=rev:cf_link_id1_type;partial_group_keyparts=2;partial_group_threshold=3'
) ENGINE=ROCKSDB DEFAULT CHARSET=latin1 COLLATE=latin1_bin ROW_FORMAT=COMPRESSED KEY_BLOCK_SIZE=8;
Warnings:
Warning	1831	Duplicate index 'type_id1' defined on the table 'test.link_table'. This is deprecated and will be disallowed in a future release.
set rocksdb_bulk_load = on, rocksdb_bulk_load_allow_sk = on;
insert into link_table values (1, 1, 1, 1, 1, 1, "1", 123, 1),
(1, 1, 2, 1, 1, 1, "1", 123, 1),
(1, 1, 3, 1, 1, 1, "1", 123, 1),
(1, 1, 4, 1, 1, 1, "1", 123, 1),
(2, 1, 1, 1, 1, 1, "1", 123, 1);
set rocksdb_bulk_load = off;
insert into link_table values (1, 1, 5, 1, 1, 1, "1", 123, 1);
select * from link_table force index(primary) where link_type = 1 and id1 = 1;
id1	id1_type	id2	id2_type	link_type	visibility	data	time	version
1	1	1	1	1	1	1	123	1
1	1	2	1	1	1	1	123	1
1	1	3	1	1	1	1	123	1
1	1	4	1	1	1	1	123	1
1	1	5	1	1	1	1	123	1
select * from link_table force index(id1_type) where link_type = 1 and id1 = 1;
id1	id1_type	id2	id2_type	link_type	visibility	data	time	version
1	1	1	1	1	1	1	123	1
1	1	2	1	1	1	1	123	1
1	1	3	1	1	1	1	123	1
1	1	4	1	1	1	1	123	1
1	1	5	1	1	1	1	123	1
select * from link_table force index(type_id1) where link_type = 1 and id1 = 1;
id1	id1_type	id2	id2_type	link_type	visibility	data	time	version
1	1	1	1	1	1	1	123	1
1	1	2	1	1	1	1	123	1
1	1	3	1	1	1	1	123	1
1	1	4	1	1	1	1	123	1
1	1	5	1	1	1	1	123	1
drop table link_table;
